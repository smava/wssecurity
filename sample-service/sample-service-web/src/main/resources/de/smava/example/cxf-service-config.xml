<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:jaxws="http://cxf.apache.org/jaxws"
       xsi:schemaLocation="
            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
            http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd
            ">

    <jaxws:endpoint id="sampleService"  implementor="de.smava.example.ws.SampleWebServiceImpl"
                    address="/SampleService" wsdlLocation="wsdl/SampleService.wsdl">

        <jaxws:properties>
            <entry key="schema-validation-enabled" value="true" />

            <entry key="ws-security.callback-handler" value="de.smava.example.ws.SampleServiceKeystorePasswordCallback"/>
            <entry key="ws-security.encryption.properties" value="encryptionKeystore.properties"/>
            <entry key="ws-security.decryption.properties" value="encryptionKeystore.properties"/>
            <entry key="ws-security.signature.properties" value="serviceKeystore.properties"/>
            <entry key="ws-security.encryption.username" value="smava_service_alias"/>
            <entry key="ws-security.sts.token.usecert" value="true"/>
        </jaxws:properties>

        <jaxws:inInterceptors>

            <ref bean="TimestampSignEncrypt_Request"/>
            <bean class="org.apache.cxf.ws.security.wss4j.DefaultCryptoCoverageChecker"/>
            <bean class="org.apache.cxf.interceptor.LoggingInInterceptor"/>
        </jaxws:inInterceptors>

        <jaxws:outInterceptors>
            <bean class="org.apache.cxf.interceptor.LoggingOutInterceptor"/>
            <ref bean="TimestampSignEncrypt_Response"/>
        </jaxws:outInterceptors>
    </jaxws:endpoint>

    <bean
            class="org.apache.cxf.ws.security.wss4j.WSS4JOutInterceptor"
            id="TimestampSignEncrypt_Response">
        <constructor-arg>
            <map>
                <entry key="action" value="Timestamp Encrypt Signature"/>
                <entry key="user" value="smava_service_alias"/>
                <entry key="signaturePropFile" value="serviceKeystore.properties"/>
                <entry key="encryptionPropFile" value="encryptionKeystore.properties"/>
                <entry key="encryptionUser" value="sample_client_alias"/>
                <entry key="signatureParts"
                       value="{Element}{http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd}Timestamp;{Element}{http://schemas.xmlsoap.org/soap/envelope/}Body"/>
                <entry key="passwordCallbackClass" value="de.smava.example.ws.SampleServiceKeystorePasswordCallback"/>
                <entry key="signatureKeyIdentifier" value="DirectReference"/>
                <entry key="encryptionKeyIdentifier" value="SKIKeyIdentifier"/>
                
            </map>
        </constructor-arg>
    </bean>

    <bean
            class="org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor"
            id="TimestampSignEncrypt_Request">
        <constructor-arg>
            <map>
                <entry key="action" value="Timestamp Encrypt Signature"/>
                <entry key="signaturePropFile" value="serviceKeystore.properties"/>
                <entry key="decryptionPropFile" value="encryptionKeystore.properties"/>
                <entry key="passwordCallbackClass" value="de.smava.example.ws.SampleServiceKeystorePasswordCallback"/>
                <entry key="signatureParts"
                       value="{Element}{http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd}Timestamp;{Element}{http://schemas.xmlsoap.org/soap/envelope/}Body"/>
                <entry key="encryptionKeyTransportAlgorithm" value="http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p"/>
                <entry key="signatureAlgorithm" value="http://www.w3.org/2000/09/xmldsig#rsa-sha1"/>
                <entry key="signatureKeyIdentifier" value="SKIKeyIdentifier"/>
                <entry key="encryptionKeyIdentifier" value="IssuerSerial"/>
            </map>
        </constructor-arg>
    </bean>
</beans>
